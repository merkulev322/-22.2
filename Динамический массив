using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Динамический_массив
{
        internal class Program
    {
        private const string ComandDelete = "удалить";
        private const string ComandSort = "сортировать";
        private const string ComandRandom = "перемешать";
        private const string ComandExit = "выход";

        static void Main(string[] args)
        {
            int[] numbers = new int[0];
            bool isStart = true;
            int number;

            while (isStart)
            {
                Console.Clear();

                Console.WriteLine("Чтобы отсортировать введите сортировать");
                Console.WriteLine("Чтобы удалить введите удалить");
                Console.WriteLine("Чтобы перемешать введите перемешать");
                Console.WriteLine("Чтобы выйти введите выход");

                for (int i = 0; i < numbers.Length; i++)
                {
                    Console.Write($"{numbers[i]} ");
                }

                Console.WriteLine();
                string comandUser = Console.ReadLine();

                if (int.TryParse(comandUser, out number))
                {
                    numbers = AddNumberArray(number, numbers);
                }
                else
                {
                    switch (comandUser)
                    {
                        case ComandDelete:
                            numbers = DeleteNumberArray(numbers);
                            break;
                        case ComandSort:
                            numbers = SortNumberArray(numbers);
                            for (int i = 0; i < numbers.Length; i++)
                            {
                                Console.Write($"{numbers[i]} ");
                            }
                            Console.WriteLine();
                            break;
                        case ComandRandom:
                            RandomNumberArray(numbers);
                            for (int i = 0; i < numbers.Length; i++)
                            {
                                Console.Write($"{numbers[i]} ");
                            }
                            Console.WriteLine();
                            break;
                        case ComandExit:
                            isStart = false;
                            break;
                        default:
                            Console.WriteLine("Неизвестная команда");
                            break;
                    }
                }
            }
        }
        static void RandomNumberArray(int[] numbers)
        {
            Random random = new Random();
            int minRandom = 0;
            int maxRandom = numbers.Length;
            int changeNumber;
            int randomNumber;

            for (int j = 0; j < numbers.Length - 1; j++)
            {
                randomNumber = random.Next(minRandom, maxRandom);
                changeNumber = numbers[j];
                numbers[j] = numbers[randomNumber];
                numbers[randomNumber] = changeNumber;
            }
        }
        static int[] SortNumberArray(int[] numbers)
        {
            for (int i = 0; i < numbers.Length; i++)
            {
                for (int j = 0; j < numbers.Length - 1; j++)
                {
                    if (numbers[j] > numbers[j + 1])
                    {
                        int tempNumber = numbers[j];
                        numbers[j] = numbers[j + 1];
                        numbers[j + 1] = tempNumber;
                    }
                }
            }
            return numbers;
        }
        static int[] AddNumberArray(int number, int[] array)
        {
            int[] ints = new int[array.Length + 1];

            for (int i = 0; i < array.Length; i++)
            {
                ints[i] = array[i];
            }

            ints[array.Length] = number;
            return ints;
        }
        static int[] DeleteNumberArray(int[] numbers)
        {
            int index;
            bool isCheckInputNumber = false;
            string comandUser;

            while (isCheckInputNumber == false)
            {
                Console.WriteLine("Введите индекс удаляемого объекта (от 0 до {0})", numbers.Length - 1);
                comandUser = Console.ReadLine();

                if (int.TryParse(comandUser, out index) && index >= 0 && index < numbers.Length)
                {
                    int[] newArray = new int[numbers.Length - 1];
                    for (int i = 0, j = 0; i < numbers.Length; i++)
                    {
                        if (i != index)
                        {
                            newArray[j++] = numbers[i];
                        }
                    }
                    isCheckInputNumber = true;
                    return newArray;
                }
                else
                {
                    Console.WriteLine("Некорректный индекс. Попробуйте снова.");
                }
            }
            return numbers;
        }
    }
}
